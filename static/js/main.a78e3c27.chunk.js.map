{"version":3,"sources":["data.js","timer.js","card.js","App.js","reportWebVitals.js","index.js"],"names":["data","brewType","icon","brewTime","color","settings","recipe","Timer","props","time","useState","background","animate","setAnimate","seconds","setSeconds","Math","floor","minutes","setMinutes","isActive","setIsActive","useEffect","interval","setInterval","clearInterval","className","style","onClick","animation","Card","name","App","cards","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAAaA,G,MAAO,CAClB,CACEC,SAAU,QACVC,KAAM,GACNC,SAAU,GACVC,MAAO,MACPC,SAAU,CAAC,EAAG,GACdC,OAAQ,CACN,GAAI,gBACJ,GAAI,kBAGR,CACEL,SAAU,QACVC,KAAM,GACNC,SAAU,GACVC,MAAO,OACPC,SAAU,CAAC,EAAG,GACdC,OAAQ,CACN,GAAI,gBACJ,GAAI,oB,oCCjBGC,EAAQ,SAACC,GAClB,IAAMC,EAAOD,EAAMC,KACrB,EAA8BC,mBAAS,CACrCC,WAAW,0BAAD,OAA4BH,EAAMJ,MAAlC,qBADZ,mBAAOQ,EAAP,KAAgBC,EAAhB,KAIA,EAA8BH,mBAASD,EAAO,IAA9C,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,mBAASM,KAAKC,MAAMR,EAAO,KAAzD,mBAAOS,EAAP,KAAgBC,EAAhB,KAEA,EAAgCT,oBAAS,GAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KAqCA,OAtBAC,qBAAU,WACR,IAAIC,EAAW,KAkBf,OAjBIH,EACFG,EAAWC,aAAY,WACjBV,EAAU,GACZC,EAAWD,EAAU,GAEP,IAAZA,IACc,IAAZI,EACFO,cAAcF,IAEdJ,EAAWD,EAAU,GACrBH,EAAW,QAGd,KAEHU,cAAcF,GAET,kBAAME,cAAcF,MAC1B,CAACH,EAAUN,EAASI,IAGrB,sBAAKQ,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,wCACA,oCACIR,EADJ,IACcJ,EAAU,GAAK,IAAMA,EAAUA,QAG/C,sBAAKY,UAAU,iBAAf,UACE,yCACA,qBAAKA,UAAU,UAAUC,MAAOf,OAElC,8BACE,gCACE,wBAAQgB,QAjDhB,WACEP,GAAY,GACZR,EAAW,2BAAID,GAAL,IAAciB,UAAU,gBAAD,OAAkBrB,EAAMC,KAAxB,yBA+C3B,mBACA,wBAAQmB,QA7ChB,WACET,EAAWH,KAAKC,MAAMR,EAAO,KAC7BM,EAAWN,EAAO,IAElBY,GAAY,GACZR,EAAW,2BAAID,GAAL,IAAciB,UAAW,WAwC7B,4BC5DGC,EAAO,SAACtB,GAIjB,OACI,qCACI,gCACI,gCACI,4BAAIA,EAAMuB,OACV,8CAEJ,wBAGA,cAAC,EAAD,CAAOtB,KAAMD,EAAMC,KAAML,MAAOI,EAAMJ,WAE1C,4BCRG4B,MARf,WACE,IAAIC,EAAQjC,EAAKkC,KAAI,SAACC,GACpB,OAAO,cAAC,EAAD,CAAM1B,KAAM0B,EAAKhC,SAAUC,MAAO+B,EAAK/B,MAAO2B,KAAMI,EAAKlC,cAGlE,OAAO,mCAAGgC,KCGGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a78e3c27.chunk.js","sourcesContent":["export const data = [\n  {\n    brewType: \"test1\",\n    icon: \"\",\n    brewTime: 68, //Seconds\n    color: \"red\",\n    settings: [1, 1], //Ratio and Water/Coffee\n    recipe: {\n      10: \"instruction 1\",\n      20: \"instruction 2\",\n    },\n  },\n  {\n    brewType: \"test2\",\n    icon: \"\",\n    brewTime: 90, //Seconds\n    color: \"blue\",\n    settings: [1, 1], //Ratio and Water/Coffee\n    recipe: {\n      10: \"instruction 1\",\n      20: \"instruction 2\",\n    },\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport \"./card.css\";\n\nexport const Timer = (props) => {\n    const time = props.time;\n  const [animate, setAnimate] = useState({\n    background: `linear-gradient(90deg, ${props.color} 50%, grey 50%)`,\n  });\n  // const [ms, setMs] = useState(0); MiliSeconds\n  const [seconds, setSeconds] = useState(time % 60);\n  const [minutes, setMinutes] = useState(Math.floor(time / 60));\n\n  const [isActive, setIsActive] = useState(false);\n\n  function start() {\n    setIsActive(true);\n    setAnimate({...animate, animation: `minimap-fill ${props.time}s linear forwards`})\n  }\n\n  function reset() {\n    setMinutes(Math.floor(time / 60));\n    setSeconds(time % 60);\n    //setMs(0);\n    setIsActive(false);\n    setAnimate({...animate, animation: \"none\" });\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        if (seconds > 0) {\n          setSeconds(seconds - 1);\n        }\n        if (seconds === 0) {\n          if (minutes === 0) {\n            clearInterval(interval);\n          } else {\n            setMinutes(minutes - 1);\n            setSeconds(59);\n          }\n        }\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds, minutes]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"timerContainer\">\n        <div>Timer</div>\n        <div>\n          0{minutes}:{seconds < 10 ? \"0\" + seconds : seconds}\n        </div>\n      </div>\n      <div className=\"timerContainer\">\n        <div>Recipe</div>\n        <div className=\"minimap\" style={animate}></div>\n      </div>\n      <div>\n        <div>\n          <button onClick={start}>Start</button>\n          <button onClick={reset}>Reset</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport {Timer} from './timer.js'\nimport \"./card.css\";\n\nexport const Card = (props) => {\n\n\n\n    return (\n        <>\n            <div>\n                <div>\n                    <p>{props.name}</p>\n                    <p>Grams test</p>\n                </div>\n                <div>\n\n                </div>\n                <Timer time={props.time} color={props.color} />\n            </div>\n            <div>\n\n            </div>\n        </>\n    )\n}","import { data } from \"./data.js\";\nimport \"./App.css\";\nimport { Card } from \"./card.js\";\n\nfunction App() {\n  let cards = data.map((item) => {\n    return <Card time={item.brewTime} color={item.color} name={item.brewType} />;\n  });\n\n  return <>{cards}</>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}